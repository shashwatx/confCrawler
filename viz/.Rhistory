tt<-as.integer(substr(conference, 7, 10))
return(tt)
}
# extract first author
extractFirstAuthors <- function(authors) {
str(authors)
authorList <- strsplit(authors,",")
firstAuthorList <- lapply(authorList, function(l) l[[1]])
return(firstAuthorList)
}
library(ggplot2)
ggplot(data, aes(x = extractYear(conference))) +
geom_bar() +
xlab("Year") +
ylab("#Papers")
data <- transform(data, selfCite = self/citations)
data <- transform(data, selfCiteFlag = selfCite>0.2)
data <- transform(data, authors=as.character(authors))
data$firstAuthor <- extractFirstAuthors(data$authors)
# plot fraction of papers with high proportion of self citations
# omit NaNs (papers with no citations)
valid <- data[!is.nan(data$selfCite),]
ggplot(valid, aes(x = extractYear(conference), fill=factor(selfCiteFlag))) +
geom_bar() +
xlab("VLDB Year") +
ylab("#Papers") +
labs(fill = "large self citations")
valid <- transform(valid, citations=as.numeric(citations))
cor(valid[c(4, 8)])
View(data)
library(plotly)
d <- diamonds[sample(nrow(diamonds), 1000), ]
p <- plot_ly(
d, x = ~carat, y = ~price,
color = ~carat, size = ~carat
)
curious <- data[is.nan(data$selfCite),]
ggplot(curious, aes(x = extractYear(conference))) +
geom_bar() +
xlab("Year") +
ylab("#CuriousPapers")
View(data)
ggplot(valid, aes(x = extractYear(conference),y=citations)) +
geom_bar(stat="identity") +
xlab("VLDB Year") +
ylab("#Citations")
View(data)
ggplot(valid, aes(x = extractYear(conference),y=self)) +
geom_bar(stat="identity") +
xlab("VLDB Year") +
ylab("#SelfCitations")
View(data)
newdata<-x %>%
group_by(conference) %>%
summarise(totalCitations = sum(citations))
newdata<-data %>%
group_by(conference) %>%
summarise(totalCitations = sum(citations))
View(newdata)
newdata<-data %>%
group_by(conference) %>%
summarise(totalCitations = sum(citations),totalSelfCitations=sum(self))
View(newdata)
newdata<-data %>%
group_by(conference) %>%
summarise(totalCitations = sum(citations),totalSelfCitations=sum(self),numPapers=n())
View(newdata)
p
View(newdata)
newdata<-data %>%
group_by(conference) %>%
summarise(totalCitations = sum(citations),totalSelfCitations=sum(self),numPapers=n(),fracSelf=sum(self)/sum(citations))
View(newdata)
p <- plot_ly(
newdata, x = newdata$totalCitations, y = newdata$totalSelfCitations,
color = newdata$fracSelf, size = newdata$numPapers
)
p
p <- plot_ly(
newdata, x = newdata$totalCitations, y = newdata$totalSelfCitations,
color = newdata$fracSelf, size = newdata$numPapers, symbol=newdata$conference
)
p
p <- plot_ly(
newdata, x = newdata$totalCitations, y = newdata$totalSelfCitations,
color = newdata$fracSelf, size = newdata$numPapers
)
p
p <- plot_ly(
newdata, x = newdata$conference, y = newdata$totalCitations,
color = newdata$fracSelf, size = newdata$numPapers
)
p
p <- plot_ly(
newdata, x = newdata$totalCitations, y = newdata$totalSelfCitations,
color = newdata$conference, size = newdata$numPapers
)
p
p <- plot_ly(
newdata, x = newdata$totalCitations, y = newdata$totalSelfCitations,
color = newdata$conference
)
p
p <- plot_ly(
newdata, x = newdata$totalCitations, y = newdata$totalSelfCitations,
color = newdata$fracSelf, size = newdata$numPapers
)
p
p <- plot_ly(
newdata, x = newdata$totalCitations, y = newdata$totalSelfCitations,
color = newdata$fracSelf, size = newdata$numPapers
)
p
p <- plot_ly(
newdata, x = newdata$totalCitations, y = newdata$totalSelfCitations,
color = newdata$fracSelf, size = newdata$numPapers,
text = ~paste("Conference: ", conference)
)
p
extractAge <- function(conference) {
year <- extractYear(conference)
age <- 2017-year
return(age)
}
newdata<-data %>%
group_by(conference) %>%
summarise(totalCitations = sum(citations),totalSelfCitations=sum(self),numPapers=n(),fracSelf=sum(self)/sum(citations),age=extractAge(conference))
newdata<-data %>%
group_by(conference) %>%
summarise(totalCitations = sum(citations),totalSelfCitations=sum(self),numPapers=n(),fracSelf=sum(self)/sum(citations))
View(newdata)
newdata <- transform(newdata, age=extractAge(conference))
View(newdata)
p <- plot_ly(
newdata, x = newdata$totalCitations, y = newdata$totalSelfCitations,
color = newdata$age, size = newdata$numPapers,
text = ~paste("Conference: ", conference)
)
p
p <- plot_ly(
newdata, x = newdata$totalCitations, y = newdata$totalSelfCitations,
color = newdata$age, size = newdata$numPapers, sizemin=2, sizeref=1.2,
text = ~paste("Conference: ", conference)
)
p
# specify data-file
datafile <- "data.all"
# read data
data <- read.table(datafile, header = T, sep = "|",quote="\"", comment.char="")
# show some info
str(data)
# correlation between numeric columns
cor(data[c(4, 5, 6, 7)])
# module to extract year from conference column
extractYear <- function(conference) {
conference <- as.character(conference)
tt<-as.integer(substr(conference, 7, 10))
return(tt)
}
extractAge <- function(conference) {
year <- extractYear(conference)
age <- 2017-year
return(age)
}
View(data)
# extract first author
extractFirstAuthors <- function(authors) {
str(authors)
authorList <- strsplit(authors,",")
firstAuthorList <- lapply(authorList, function(l) l[[1]])
return(firstAuthorList)
}
library(stringr)
str_sub()
?str_sub()
View(data)
str_sub(data$conference,1,str_length(data$conference)-3)
extractYear <- function(conference) {
conference <- as.character(conference)
ttx<-str_sub(conference,str_length(conference)-3,str_length(conference))
tt<-as.integer(ttx)
return(tt)
}
str_sub(data$conference,str_length(),str_length(data$conference)-3)
conference="asdasdasasdasd1922"
extractYear(conference)
library(stringr)
# specify data-file
datafile <- "data.all"
# read data
data <- read.table(datafile, header = T, sep = "|",quote="\"", comment.char="")
# show some info
str(data)
# correlation between numeric columns
cor(data[c(4, 5, 6, 7)])
# module to extract year from conference column
extractYear <- function(conference) {
conference <- as.character(conference)
ttx<-str_sub(conference,str_length(conference)-3,str_length(conference))
tt<-as.integer(ttx)
return(tt)
}
extractAge <- function(conference) {
year <- extractYear(conference)
age <- 2017-year
return(age)
}
# extract first author
extractFirstAuthors <- function(authors) {
str(authors)
authorList <- strsplit(authors,",")
firstAuthorList <- lapply(authorList, function(l) l[[1]])
return(firstAuthorList)
}
# papers against time
library(ggplot2)
ggplot(data, aes(x = extractYear(conference))) +
geom_bar() +
xlab("Year") +
ylab("#Papers")
data <- transform(data, selfCite = self/citations)
data <- transform(data, selfCiteFlag = selfCite>0.2)
data <- transform(data, authors=as.character(authors))
data$firstAuthor <- extractFirstAuthors(data$authors)
valid <- data[!is.nan(data$selfCite),]
ggplot(valid, aes(x = extractYear(conference), fill=factor(selfCiteFlag))) +
geom_bar() +
xlab("Year") +
ylab("#Papers") +
labs(fill = "large self citations")
conference
conference$lastIndexOf("1")
conference<-as.character(conference)
conference$lastIndexOf("1")
?lastIndexOf()
extractConference <- function(conferenceString) {
conferenceString <- as.character(conferenceString)
ttx<-str_sub(conferenceString,str_length(conference)-7,str_length(conference))
return(ttx)
}
#aggregate(data$citations, by=list(Category=x$conference), FUN=sum)
newdata<-data %>%
group_by(conference) %>%
summarise(totalCitations = sum(citations),
totalSelfCitations=sum(self),
numPapers=n(),
fracSelf=sum(self)/sum(citations))
View(newdata)
newdata <- transform(newdata, age=extractAge(conference))
newdata <- transform(newdata, conference=extractConference(conference))
View(newdata)
newdata<-data %>%
group_by(conference) %>%
summarise(totalCitations = sum(citations),
totalSelfCitations=sum(self),
numPapers=n(),
fracSelf=sum(self)/sum(citations))
View(newdata)
extractConference <- function(conferenceString) {
conferenceString <- as.character(conferenceString)
ttx<-str_sub(conferenceString,str_length(conference)-4,str_length(conference))
return(ttx)
}
newdata <- transform(newdata, age=extractAge(conference))
newdata <- transform(newdata, conference=extractConference(conference))
View(newdata)
newdata<-data %>%
group_by(conference) %>%
summarise(totalCitations = sum(citations),
totalSelfCitations=sum(self),
numPapers=n(),
fracSelf=sum(self)/sum(citations))
newdata <- transform(newdata, age=extractAge(conference))
#newdata <- transform(newdata, conference=extractConference(conference))
library(plotly)
p <- plot_ly(
newdata, x = newdata$totalCitations, y = newdata$totalSelfCitations,
color = newdata$age, size = newdata$numPapers, sizemin=2, sizeref=1.2,
text = ~paste("Conference: ", conference)
)
p
library(stringr)
# specify data-file
datafile <- "data.all"
# read data
data <- read.table(datafile, header = T, sep = "|",quote="\"", comment.char="")
# show some info
str(data)
# correlation between numeric columns
cor(data[c(4, 5, 6, 7)])
# module to extract year from conference column
extractYear <- function(conference) {
conference <- as.character(conference)
ttx<-str_sub(conference,str_length(conference)-3,str_length(conference))
tt<-as.integer(ttx)
return(tt)
}
# module to extract conference from conference string
extractConference <- function(conferenceString) {
conferenceString <- as.character(conferenceString)
ttx<-str_sub(conferenceString,str_length(conference)-4,str_length(conference))
return(ttx)
}
extractAge <- function(conference) {
year <- extractYear(conference)
age <- 2017-year
return(age)
}
# extract first author
extractFirstAuthors <- function(authors) {
str(authors)
authorList <- strsplit(authors,",")
firstAuthorList <- lapply(authorList, function(l) l[[1]])
return(firstAuthorList)
}
# papers against time
library(ggplot2)
ggplot(data, aes(x = extractYear(conference))) +
geom_bar() +
xlab("Year") +
ylab("#Papers")
data <- transform(data, selfCite = self/citations)
data <- transform(data, selfCiteFlag = selfCite>0.2)
data <- transform(data, authors=as.character(authors))
data$firstAuthor <- extractFirstAuthors(data$authors)
# plot fraction of papers with high proportion of self citations
# omit NaNs (papers with no citations)
valid <- data[!is.nan(data$selfCite),]
ggplot(valid, aes(x = extractYear(conference), fill=factor(selfCiteFlag))) +
geom_bar() +
xlab("Year") +
ylab("#Papers") +
labs(fill = "large self citations")
ggplot(valid, aes(x = extractYear(conference),y=citations)) +
geom_bar(stat="identity") +
xlab("VLDB Year") +
ylab("#Citations")
ggplot(valid, aes(x = extractYear(conference),y=self)) +
geom_bar(stat="identity") +
xlab("VLDB Year") +
ylab("#SelfCitations")
#aggregate(data$citations, by=list(Category=x$conference), FUN=sum)
newdata<-data %>%
group_by(conference) %>%
summarise(totalCitations = sum(citations),
totalSelfCitations=sum(self),
numPapers=n(),
fracSelf=sum(self)/sum(citations))
newdata <- transform(newdata, age=extractAge(conference))
#newdata <- transform(newdata, conference=extractConference(conference))
library(plotly)
p <- plot_ly(
newdata, x = newdata$totalCitations, y = newdata$totalSelfCitations,
color = newdata$age, size = newdata$numPapers, sizemin=2, sizeref=1.2,
text = ~paste("Conference: ", conference)
)
?str_sub
extractConference <- function(conferenceString) {
#conferenceString <- as.character(conferenceString)
ttx<-str_sub(conferenceString,str_length(conference)-4,str_length(conference))
return(ttx)
}
conference="asdasdasdasedbt1923"
extractConference(conference)
p <- plot_ly(
newdata, x = newdata$totalCitations, y = newdata$totalSelfCitations,
color = newdata$age, size = newdata$numPapers, sizemin=2, sizeref=1.2,
text = ~paste("Conference: ", extractConference(conference))
)
p
extractConference <- function(conferenceString) {
#conferenceString <- as.character(conferenceString)
ttx<-str_sub(conferenceString,str_length(conference)-8,str_length(conference))
return(ttx)
}
extractConference(conference)
str(newdata)
p <- plot_ly(
newdata, x = newdata$totalCitations, y = newdata$totalSelfCitations,
color = newdata$age, size = newdata$numPapers, sizemin=2, sizeref=1.2,
text = ~paste("Conference: ", as.character(conference))
)
p
p
library(stringr)
# specify data-file
datafile <- "data.all"
# read data
data <- read.table(datafile, header = T, sep = "|",quote="\"", comment.char="")
# show some info
str(data)
# correlation between numeric columns
cor(data[c(4, 5, 6, 7)])
# module to extract year from conference column
extractYear <- function(conference) {
conference <- as.character(conference)
ttx<-str_sub(conference,str_length(conference)-3,str_length(conference))
tt<-as.integer(ttx)
return(tt)
}
# module to extract conference from conference string
extractConference <- function(conferenceString) {
#conferenceString <- as.character(conferenceString)
ttx<-str_sub(conferenceString,str_length(conference)-8,str_length(conference))
return(ttx)
}
extractAge <- function(conference) {
year <- extractYear(conference)
age <- 2017-year
return(age)
}
# extract first author
extractFirstAuthors <- function(authors) {
str(authors)
authorList <- strsplit(authors,",")
firstAuthorList <- lapply(authorList, function(l) l[[1]])
return(firstAuthorList)
}
# papers against time
library(ggplot2)
ggplot(data, aes(x = extractYear(conference))) +
geom_bar() +
xlab("Year") +
ylab("#Papers")
data <- transform(data, selfCite = self/citations)
data <- transform(data, selfCiteFlag = selfCite>0.2)
data <- transform(data, authors=as.character(authors))
data$firstAuthor <- extractFirstAuthors(data$authors)
# plot fraction of papers with high proportion of self citations
# omit NaNs (papers with no citations)
valid <- data[!is.nan(data$selfCite),]
ggplot(valid, aes(x = extractYear(conference), fill=factor(selfCiteFlag))) +
geom_bar() +
xlab("Year") +
ylab("#Papers") +
labs(fill = "large self citations")
ggplot(valid, aes(x = extractYear(conference),y=citations)) +
geom_bar(stat="identity") +
xlab("VLDB Year") +
ylab("#Citations")
ggplot(valid, aes(x = extractYear(conference),y=self)) +
geom_bar(stat="identity") +
xlab("VLDB Year") +
ylab("#SelfCitations")
#aggregate(data$citations, by=list(Category=x$conference), FUN=sum)
newdata<-data %>%
group_by(conference) %>%
summarise(totalCitations = sum(citations),
totalSelfCitations=sum(self),
numPapers=n(),
fracSelf=sum(self)/sum(citations))
newdata <- transform(newdata, age=extractAge(conference))
#newdata <- transform(newdata, conference=extractConference(conference))
library(plotly)
p <- plot_ly(
newdata, x = newdata$totalCitations, y = newdata$totalSelfCitations,
color = newdata$age, size = newdata$numPapers, sizemin=2, sizeref=1.2,
text = ~paste("Conference: ", as.character(conference))
)
p
p <- plot_ly(
newdata, x = newdata$totalCitations, y = newdata$totalSelfCitations,
color = newdata$age, size = newdata$numPapers, sizemin=2, sizeref=1.2,
text = ~paste("Conference: ", as.character(conference)+"<br>"+numPapers)
)
p
p <- plot_ly(
newdata, x = newdata$totalCitations, y = newdata$totalSelfCitations,
color = newdata$age, size = newdata$numPapers, sizemin=2, sizeref=1.2,
text = ~paste("Conference: ", as.character(conference),"<br>",numPapers)
)
p
p <- plot_ly(
newdata, x = newdata$totalCitations, y = newdata$totalSelfCitations,
color = newdata$age, size = newdata$numPapers, sizemin=10,
text = ~paste("Conference: ", as.character(conference),"<br>",numPapers)
)
p
p <- plot_ly(
newdata, mode='markers', x = newdata$totalCitations, y = newdata$totalSelfCitations,
color = newdata$age, size = newdata$numPapers, sizemin=10,
text = ~paste("Conference: ", as.character(conference),"<br>",numPapers)
)
p
p <- plot_ly(
newdata, mode='markers', x = newdata$totalCitations, y = newdata$totalSelfCitations,
color = newdata$age, size = newdata$numPapers, sizemin=20,
text = ~paste("Conference: ", as.character(conference),"<br>",numPapers)
)
p <- plot_ly(
newdata, mode='markers', x = newdata$totalCitations, y = newdata$totalSelfCitations,
color = newdata$age, size = newdata$numPapers, sizemin=20,
text = ~paste("Conference: ", as.character(conference),"<br>",numPapers)
)
p <- plot_ly(
newdata, mode='markers', x = newdata$totalCitations, y = newdata$totalSelfCitations,
color = newdata$age, size = newdata$numPapers, sizemin=20,
text = ~paste("Conference: ", as.character(conference),"<br>",numPapers)
)
p <- plot_ly(
newdata, mode='markers', x = newdata$totalCitations, y = newdata$totalSelfCitations,
color = newdata$age, size = newdata$numPapers, sizemin=20,
text = ~paste("Conference: ", as.character(conference),"<br>",numPapers)
)
p
p <- plot_ly(
newdata, mode='markers', x = newdata$totalCitations, y = newdata$totalSelfCitations,
color = newdata$age, size = newdata$numPapers, sizeref=2,
text = ~paste("Conference: ", as.character(conference),"<br>",numPapers)
)
p
install.packages(c("car", "haven", "httpuv", "remotes", "sp", "sqldf"))
